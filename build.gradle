plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.7.0'
    id 'maven-publish'
}

group = 'dev.mikchan'
version = '0.0.3'

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/MikChanNoPlugins/Chat"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}


repositories {
    mavenCentral()

    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }

    maven {
        name 'placeholderapi'
        url 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'

    compileOnly 'me.clip:placeholderapi:2.10.9'

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.0'
    implementation 'dev.dejvokep:boosted-yaml-spigot:1.2'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
