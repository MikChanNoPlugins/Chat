plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.8.10'
    id 'org.jetbrains.dokka' version "1.7.20"
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

static def determineVersion(String defaultVersion) {
    def envVersion = System.getenv("VERSION")
    return envVersion == null ? defaultVersion : envVersion
}

group = 'dev.mikchan.mcnp'
version = determineVersion('2.1.3')

repositories {
    mavenCentral()

    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }

    maven {
        name = 'placeholderapi'
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }

    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.19.3-R0.1-SNAPSHOT'
    compileOnly 'net.md-5:bungeecord-api:1.19-R0.1-SNAPSHOT'

    compileOnly 'me.clip:placeholderapi:2.10.9'

    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.8.10'
    compileOnly 'dev.dejvokep:boosted-yaml-spigot:1.3'

    implementation "org.bstats:bstats-bukkit:3.0.1"
    shadow "org.bstats:bstats-bukkit:3.0.1"

    implementation "org.bstats:bstats-bukkit:3.0.1"
    shadow "org.bstats:bstats-base:3.0.1"
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }

    withSourcesJar()
    withJavadocJar()
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'

    filesMatching('plugin.yml') {
        expand props
    }

    filesMatching('bungee.yml') {
        expand props
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dokkaHtml {
    outputDirectory.set(file("${buildDir}/dokka"))
}

javadocJar {
    archiveClassifier.set("javadoc")
    dependsOn("dokkaHtml")
    from("$buildDir/dokka")
}

shadowJar {
    archiveClassifier.set(null)

    dependencies {
        include(dependency('org.bstats:bstats-bukkit'))
        include(dependency('org.bstats:bstats-base'))
    }

    relocate "org.bstats", "dev.mikchan.mcnp.chat.shadow.org.bstats"
}

publishing {
    repositories {
        maven {
            name = "GitHub"
            url = "https://maven.pkg.github.com/MikChanNoPlugins/Chat"
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }

    publications {
        gpr(MavenPublication) {
            groupId = group
            artifactId = 'chat'

            artifact jar
            artifact javadocJar
            artifact sourcesJar
        }
    }
}

if (file("local.gradle").exists()) {
    apply from: "local.gradle"
}
